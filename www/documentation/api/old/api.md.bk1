FORMAT: 1A


#Welcome to the Scaleway API documentation. This API provides access to Scaleway services.

##Request and response 

the scaleway api works over https and is accessed from the `api.scaleway.com` domain.

all data is sent and received as json.

## Constructing Requests

Requests are made of two components:

- API version
- Resource path

To construct a proper request, you will need to format the URI as follows:

`https://api.scaleway.com/{version}/{ressource}`

An example request, to retrieves detailed informations about an instance might be:

```
$curl -i https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf

HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
Status: 200 OK
X-RateLimit-Limit: 5000
X-RateLimit-Remaining: 4999
X-RateLimit-Reset: 1389359739
...

{
  "server": {
    "id": xxxx,
    "image_id": yyyy,
    "name": "zzzz",
    ...
  }
}
```


##Error

Scaleway uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, a charge failed, etc.), and codes in the 5xx range indicate an error with Scaleway's servers.


###HTTP Status Code Summary

- 200 OK - Everything worked as expected.
- 400 Bad Request - Often missing a required parameter.
- 401 Unauthorized - No valid API key provided.
- 402 Request Failed - Parameters were valid but request failed.
- 404 Not Found - The requested item doesn't exist.
- 500, 502, 503, 504 Server errors - something went wrong on Scaleway's end.

Not all errors map cleanly onto HTTP response codes, however. When a request is valid but does not complete successfully (e.g. an instance can not be launch), we return a 402 error code.

###Attributes

- type:
 - invalid_request_error: Occured when your request has an invalid parameters
 - api_error: API errors is used in case of problem with Scaleway's servers
- message:
 - A human readable error giving more details about the error
- code (Optional):
 - For ressources errors, it's a short string describing error that occurred.
- param (Optional):
 - The parameter the error relates to if the error is parameter-specific.


###Pagination

Methods returning multiple items are paginated to 25 items by default.
You can specify further pages with the ?page parameter. You can also set a custom page size up to 500 with the ?limit parameter.

```
$curl -i https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf/tags?page=5&limit=150

HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
Status: 200 OK
X-RateLimit-Limit: 5000
X-RateLimit-Remaining: 4999
X-RateLimit-Reset: 1389359739
Link: <https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf/tags?page=1&limit=150>; rel="first", <https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf/tags?page=4&limit=150>; rel="prev", <https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf/tags?page=6&limit=150>; rel="next", <https://api.scaleway.com/v1/servers/Server-198779b8-e4b5-4876-9e2f-aa09c1ce9ebf/tags?page=10&limit=150>; rel="last",
...

{
  "tags": {
    ...
  }
}
```

##Resources

###Group Servers
Resources related to Scaleway instances.

####Servers [/api/v1/server]
#####Creates and provisions a new server [POST]
Creates and provisions a new server
This creates a server and also creates and assigns a default tag (type:server and name:default). Server has default state:off.

+ Parameters
    + volumes (required, string, `123,123,123`)... A list of volumes to attach to the server which will be mounted as nbdX where X is there position in the list

+ Response 201 (application/json)

        {
            "server": {
                "id": xxxx,
                "image_id": yyyy,
                "name": "zzzz"
            }
        } 

+ Response 403 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Permission denied to create a new server",
            "code": "permission_error",
            "param": "server_id"
        }

#####Creates and provisions a new server [GET]

+ Parameters
    + server_id (required, string, `20302`)... Server unique identifier.

+ Response 200 (application/json)

        {
            "server": {
                "id": xxxx,
                "image_id": yyyy,
                "name": "zzzz"
            }
        } 

+ Response 403 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Permission denied to access this server",
            "code": "permission_error",
            "param": "server_id"
        }

+ Response 404 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Server not found",
            "code": "missing_ressource",
            "param": "server_id"
        }

#####Updates info of a server [PUT]

+ Parameters
  + server_id (required, string, `20302`)... Server unique identifier.

+ Response 204

+ Response 403 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Permission denied to delete this server",
            "code": "permission_error",
            "param": "server_id"
        }

+ Response 404 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Server not found",
            "code": "missing_ressource",
            "param": "server_id"
        }

#####Deletes and deprovisions a server. (Permission required: view_server, admin_server) [DELETE]

+ Parameters
    + server_id (required, string, `20302`)... Server unique identifier.

+ Response 204

+ Response 403 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Permission denied to delete this server",
            "code": "permission_error",
            "param": "server_id"
        }

+ Response 404 (application/json)

        {
            "type": "invalid_request_error",
            "message": "Server not found",
            "code": "missing_ressource",
            "param": "server_id"
        }


####Action [/api/v1/server/{server_id}/action]
#####Runs an action on server [POST]


+ Parameters
    + server_id (required, string, `20302`)... Server unique identifier.
    + action (required, string, 'run')... Action name (see list-server-actions).

#####Lists available actions for the specified server [GET]

+ Parameters
    + server_id (required, string, `20302`)... Server unique identifier.

+ Response 200 (application/json)

        {
            action {


            }
        }

+ Response 204

